---
- name: Ansible Filters
  hosts: r2
  gather_facts: false
  vars:
    ospf_process_id: 2
    vrf_name: 'mgmt'
    devices: ['r1', 'r2']
  tasks:
  ########### default #############
    # - name: Print output
    #   ansible.builtin.debug:
    #     msg:
    #       - "{{ ospf_process_id | default(1, true)}}"
  
  ########### default(omit) #############
    # - name: Interface Config
    #   with_items: "{{ interface_list }}"
    #   cisco.ios.ios_interfaces:
    #     config:
    #       - name: "{{item.name}}"
    #         description: "{{item.description | default(omit)}}"
    #   register: intf_config

    # - name: Print output
    #   ansible.builtin.debug:
    #     msg:
    #       - "{{ intf_config }}"

    ########## Ternary ###############
    # - name: Ternary Filter
    #   ansible.builtin.set_fact:
    #     vrf_type: "{{ (vrf_name == 'mgmt') | ternary('management' , 'non-management') }}"
    
    # - name: Print output
    #   ansible.builtin.debug:
    #     msg: 
    #       - "{{ vrf_type }}"
    #       - "{{ vrf_type | type_debug }}"
    #       - "{{ devices | type_debug }}"
    
    ########## dict2items, items2dict ############
    # - name: Ansible dict2items Filter
    #   ansible.builtin.debug:
    #     msg: "{{ ospf_vars | dict2items }}"
    
    # - name: Ansible dict2items Filter
    #   ansible.builtin.debug:
    #     msg: "{{ ospf_vars | dict2items(key_name='abc', value_name='cde') }}"

    # - name: Ansible items2dict Filter
    #   ansible.builtin.debug:
    #     msg: "{{interface_list | items2dict(key_name='name', value_name='ip') }}"
    
    ########## Save to_json, to_yaml ############
    # - name: Save to_json
    #   ansible.builtin.copy:
    #     #content: "{{ ospf_vars | to_json }}"
    #     #content: "{{ ospf_vars | to_nice_json }}"
    #     content: "{{ ospf_vars | to_nice_json(indent=8) }}"
    #     #dest: to_json_demo.json
    #     #dest: to_nice_json_demo.json
    #     dest: to_nice_json_ind_demo.json

    # - name: Save to_yaml
    #   ansible.builtin.copy:
    #     #content: "{{ interface_list | to_yaml }}"
    #     content: "{{ interface_list | to_nice_yaml(indent=8) }}"
    #     dest: to_nice_yaml_ind_demo.yaml

    ########## Convert into ansible variable from_json, from_yaml ############
    # - name: Print from_json file
    #   ansible.builtin.debug:
    #     msg: 
    #       - "{{ lookup('file', '/home/naima/Ansible_Practice_1/to_json_demo.json') | from_json }}"
    #       - "{{ (lookup('file', '/home/naima/Ansible_Practice_1/to_json_demo.json') | from_json).area }}"
    
    # - name: Print from_yaml file
    #   ansible.builtin.debug:
    #     msg: 
    #       - "{{ lookup('file', '/home/naima/Ansible_Practice_1/to_yaml_demo.yaml') | from_yaml }}"
    
     ########## Zip and Zip_longest ############
    # - name: Zip and Zip_longest
    #   ansible.builtin.set_fact:
    #    # route_list: "{{dest_subs | zip(dest_gws) | list}}"
    #    # route_list: "{{dest_subs | zip_longest(dest_gws) | list}}"
    #     route_list: "{{dest_subs | zip_longest(dest_gws, fillvalue='GigabitEthernet0/2') | list}}"

    # - name: Print Zip data
    #   ansible.builtin.debug:
    #     msg: "{{ route_list }}"

    # - name: Generate route command
    #   loop: "{{route_list}}"
    #   ansible.builtin.set_fact:
    #     route_conf: "{{ route_conf | default([]) + ['ip route ' + item[0] + ' 255.255.255.0 ' + item[1] ]}}"
    
    # - name: Print Output
    #   ansible.builtin.debug:
    #     msg: "{{ route_conf }}"
    
    # - name: Create dict
    #   ansible.builtin.set_fact:
    #     route_dict: "{{dict(dest_subs | zip_longest(dest_gws, fillvalue='GigabitEthernet0/2'))}}"

    # - name: Print Output
    #   ansible.builtin.debug:
    #     msg: "{{ route_dict }}"
 
    ######### Combine Filter #########
    - name: Print Combine 
      ansible.builtin.debug:
        msg:
          - "{{ {'Gi1': '1.1.1.1', 'Gi2': '2.2.2.2'} | combine({'Gi2': '2.2.3.3'}) }}"
          - "{{ ['a', 'b'] + ['c', 'd', 'a'] }}"
          - "{{ (['a', 'b'] + ['c', 'd', 'a']) | unique }}"